name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

env:
  IMAGE_NAME: ci-cd-demo
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: Set version tag
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "VERSION_TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          else
            echo "VERSION_TAG=latest" >> $GITHUB_ENV
          fi

      - name: Build Docker image
        run: docker build -t $DOCKER_USERNAME/$IMAGE_NAME:latest .

      - name: Tag Docker image with version
        run: docker tag $DOCKER_USERNAME/$IMAGE_NAME:latest $DOCKER_USERNAME/$IMAGE_NAME:${VERSION_TAG}

      - name: Push Docker image (latest)
        run: docker push $DOCKER_USERNAME/$IMAGE_NAME:latest

      - name: Push Docker image (versioned)
        run: docker push $DOCKER_USERNAME/$IMAGE_NAME:${VERSION_TAG}

  release:
    name: Create GitHub Release
    needs: build-test-deploy
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ‚úÖ Docker image: `${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}`
            üê≥ Auto-built and deployed via CI/CD.

